# Python Projects

This repository contains a collection of Python projects that I have created. Each project focuses on different aspects of Python programming and showcases various concepts and functionalities.

## Projects

1. **Password Strength Checker**

   Description: This project is a password strength checker that evaluates the strength of a given password based on predefined criteria. It provides feedback on the password's strength and suggests improvements if necessary.

   Usage: To use the password strength checker, run the `password_strength_checker.py` script and follow the instructions.

2. **Hangman Game**

   Description: The Hangman Game is a classic word-guessing game. Players try to guess a hidden word by suggesting letters within a certain number of attempts. The game provides hints and keeps track of the player's score.

   Usage: To play the Hangman Game, run the `hangman_game.py` script and follow the instructions on the command line.

3. **Snake Game**

   Description: This project implements the popular Snake Game using Python and the Pygame library. Players control a snake that grows in length by consuming food while avoiding collisions with walls or its own body.

   Usage: To play the Snake Game, run the `snake_game.py` script and use the arrow keys to control the snake.

4. **Tic-Tac-Toe Game (clickable)**

   Description: The Tic-Tac-Toe Game is a two-player game where players take turns marking X or O on a 3x3 grid. This version of the game features a graphical user interface (GUI) with clickable buttons for player interaction.

   Usage: To play the Tic-Tac-Toe Game, run the `tic_tac_toe_game.py` script and use the mouse to click on the desired grid cell.

## Prerequisites

Make sure you have Python installed on your system to run these projects. Additionally, some projects might require specific libraries or modules. Please refer to the individual project files for any additional requirements.



Password Strength Cheaker

The function checks for the following password requirements:
1.Length should be at least 8 characters.
2.Should contain at least one uppercase letter.
3.Should contain at least one lowercase letter.
4.Should contain at least one digit.
5.Should contain at least one special character.

Based on these criteria, the function categorizes the password into one of four strength levels: 'Weak', 'Moderate', 'Strong', or 'Very Strong'.
